# Default values for python-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2
podManagementPolicy: Parallel

image:
  repository: kinjalik/devops-course-app
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "python"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  vault.hashicorp.com/agent-inject: 'true'
  vault.hashicorp.com/agent-inject-status: 'update'
  vault.hashicorp.com/role: 'python-app'
  vault.hashicorp.com/agent-inject-secret-database-config.txt: 'internal/data/database/config'
  vault.hashicorp.com/agent-inject-template-database-config.txt: |
    {{- with secret "internal/data/database/config" -}}
    {{ .Data.data.username }}:{{ .Data.data.password }}
    {{- end -}}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
#   minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

volumeMounts:
- name: config-volume-py
  mountPath: "/config.json"
  subPath: config.json
- name: counter-data-py
  mountPath: /data
- name: init-data-py
  mountPath: /init_data

volumes:
- name: config-volume-py
  configMap:
    name: config-map-entity-py
- name: init-data-py
  emptyDir:
    sizeLimit: 10Mi

volumeClaimTemplates:
- metadata:
    name: counter-data-py
  spec:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 10Mi

initContainers:
  - name: install
    image: busybox:1.28
    command:
    - wget
    - "-O"
    - "/work-dir/index.html"
    - http://info.cern.ch
    volumeMounts:
    - name: init-data-py
      mountPath: "/work-dir"
  - name: queue-zero
    image: busybox:1.28
    command:
    - "touch"
    - "/work-dir/file"
    volumeMounts:
    - name: init-data-py
      mountPath: "/work-dir"
  - name: queue-one
    image: busybox:1.28
    command:
    - "sh"
    - "-c"
    - 'echo one >> /work-dir/file'
    volumeMounts:
    - name: init-data-py
      mountPath: "/work-dir"
  - name: queue-two
    image: busybox:1.28
    command:
    - "sh"
    - "-c"
    - 'echo two >> /work-dir/file'
    volumeMounts:
    - name: init-data-py
      mountPath: "/work-dir"
  - name: queue-three
    image: busybox:1.28
    command:
    - "sh"
    - "-c"
    - 'echo three >> /work-dir/file'
    volumeMounts:
    - name: init-data-py
      mountPath: "/work-dir"